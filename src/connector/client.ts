import 'server-only';

import createClient, { type Middleware } from "openapi-fetch";
import type { paths } from "./openapi"; // generated by openapi-typescript
import { env } from "@/env";

const client = createClient<paths>({ baseUrl: env.OVERLEAF_CONNECTOR_URL });

const authMiddleware: Middleware = {
  async onRequest({ request }) {
    request.headers.set("Authorization", `Bearer ${env.OVERLEAF_CONNECTOR_API_KEY}`);
    return request;
  },
};

client.use(authMiddleware);

export async function listUsers() {
  const { data, error } = await client.GET("/list-users");
  if (error) {
    throw error;
  }
  return data;
}

export async function getUser(email: string) {
  const { data, error } = await client.GET("/get-user", {
    params: {
      query: { email },
    },
  });
  if (error) {
    return null;
  }
  return data;
}

export async function createUser(user: { email: string; isAdmin: boolean }) {
  const { email, isAdmin } = user;
  const { data, error } = await client.POST("/create-user", {
    body: {
      email,
      admin: isAdmin,
    },
  });
  if (error) {
    throw error;
  }
  return data;
}
